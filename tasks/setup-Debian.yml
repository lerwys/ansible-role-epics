---
- name: Update apt cache
  apt:
    update_cache: true
    cache_valid_time: 86400
  become: true
  register: apt_update_cache_result
  until: apt_update_cache_result is success
  retries: 5
  delay: 2

- name: Install dependency packages
  apt:
    name:
      - gnupg
      - apt-transport-https
    state: present
    update_cache: true
    # We only need this as we might have expired signatures
    # that could prevent us from executing this. The next task
    # should fix this is that's the case, is not, it will fail for
    # some other reason
    allow_unauthenticated: true
  # In some cases, we might have an invalid signature, preventing
  # us from executing this. Ignore failures here and if something
  # doesn't work on the next task we deal with it manually
  failed_when: false
  become: true
  register: apt_result
  until: apt_result is success
  retries: 5
  delay: 2

- name: Import APT GPG keys by URL
  apt_key:
    url: "{{ item.url }}"
    keyring: "{{ item.keyring }}"
    state: present
  when: item.url is defined and item.url|length > 0
  with_items:
    - "{{ epics_repository_keys }}"
  become: true
  register: gpg_import_url
  until: gpg_import_url is success
  retries: 5
  delay: 2

- name: Import APT GPG keys by keyserver
  apt_key:
    keyserver: "{{ item.keyserver }}"
    id: "{{ item.id }}"
    state: present
  when: item.keyserver is defined and item.keyserver|length > 0
  with_items:
    - "{{ epics_repository_keys }}"
  become: true
  register: gpg_import_key
  until: gpg_import_key is success
  retries: 5
  delay: 2

# Ansible will call my handler only once even is just one new repository
# was added, which is what we want
- name: Add default repositories
  apt_repository:
    repo: "{{ item.baseurl }}"
    state: "{{ item.state }}"
    filename: "{{ item.file }}"
    update_cache: true
  with_items:
    - "{{ epics_repository_apt }}"
  become: true
